let[@libRty] chdir ?l:(a = (true : [%v: Path.t])) =
  {
    pre = _G (Any true);
    res = (true : [%v: unit]);
    newadding = lastL && Chdir ((a [@d]), v, true);
  }

let[@libRty] ioctl ?l:(a = (true : [%v: Path.t])) ?l:(c = (true : [%v: int])) =
  {
    pre = canWriteP a;
    res = (true : [%v: unit]);
    newadding = lastL && Ioctl ((a [@d]), (c [@d]), v, true);
  }

let[@libRty] openFile ?l:(a = (true : [%v: Path.t])) ?l:(c = (true : [%v: int]))
    =
  [|
    {
      pre = isOpened a;
      res = (v : [%v: bool]);
      newadding = lastL && OpenFile ((a [@d]), (c [@d]), v, v);
    };
    {
      pre = not (isOpened a);
      res = (not v : [%v: bool]);
      newadding = lastL && OpenFile ((a [@d]), (c [@d]), v, not v);
    };
  |]

let[@libRty] closeFile ?l:(a = (true : [%v: Path.t])) =
  {
    pre = isOpened a;
    res = (true : [%v: bool]);
    newadding = lastL && CloseFile ((a [@d]), v, true);
  }

(* Mirai *)
let[@libRty] disableDevice ?l:(a = (true : [%v: Path.t]) [@over]) : [%v: int] =
  v == 1

let[@libRty] getRoot ?l:(a = (true : [%v: unit]) [@over]) : [%v: Path.t] = true
